# üìÅ services/ai_response.py

import base64
import io
import logging
from openai import AsyncOpenAI
from config import OPENAI_API_KEY

client = AsyncOpenAI(api_key=OPENAI_API_KEY)

# üé® Mem caption generatsiya funksiyasi
async def generate_meme_caption(prompt: str, lang: str) -> str:
    system_prompt = {
        "en": "You are a meme expert. Return only a short, funny meme caption.",
        "uz": "Siz mem yaratish bo‚Äòyicha mutaxassissiz. Faqat kulgili va qisqa mem matnini qaytaring.",
        "ru": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –º–µ–º–∞–º. –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –∫–æ—Ä–æ—Ç–∫–∏–π –∏ —Å–º–µ—à–Ω–æ–π —Ç–µ–∫—Å—Ç –º–µ–º–∞."
    }.get(lang, "You are a meme expert. Return only a short, funny meme caption.")

    response = await client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ],
        temperature=0.7
    )

    return response.choices[0].message.content.strip()

# üñº Mem uchun rasm generatsiyasi (DALL¬∑E orqali)
async def generate_meme_image(prompt: str, lang: str) -> bytes:
    try:
        response = await client.images.generate(
            model="dall-e-3",
            prompt=prompt,
            size="1024x1024",
            response_format="b64_json",
            n=1
        )
        image_data = response.data[0].b64_json
        image_bytes = base64.b64decode(image_data)
        return io.BytesIO(image_bytes)
    except Exception as e:
        logging.error(f"‚ùå Error generating meme image: {e}")
        raise

# ü§ñ Remix bosilganda kulgili, kontekstual xabar chiqarish
async def generate_remix_message(prompt: str, lang: str) -> str:
    system_prompt = {
        "uz": (
            "Siz kulgili, o‚Äòzbekona hazil tuyg‚Äòusiga ega sun‚Äôiy intellektsiyasiz. "
            "Sizdan remix so‚Äòralganida, foydalanuvchiga qisqa, quvnoq va hazilkash tarzda javob berasiz. "
            "Javobingiz ichida emoji ishlatsangiz ham bo‚Äòladi. "
            "Mavzuni o‚Äòzbek madaniyati, kundalik hayot, yoki zamonaviy mem uslubida tasvirlang."
        ),
        "en": (
            "You are a humorous, meme-savvy AI with a clever personality. "
            "When a remix is requested, you respond with a short, witty, and fun message. "
            "You may use emojis. Your reply should feel natural, funny, and fit modern meme culture."
        ),
        "ru": (
            "–¢—ã –≤–µ—Å—ë–ª—ã–π –∏ –æ—Å—Ç—Ä–æ—É–º–Ω—ã–π –ò–ò, —Ö–æ—Ä–æ—à–æ —Ä–∞–∑–±–∏—Ä–∞—é—â–∏–π—Å—è –≤ –º–µ–º–∞—Ö. "
            "–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç —Ä–µ–º–∏–∫—Å, —Ç—ã –æ—Ç–≤–µ—á–∞–µ—à—å –∫–æ—Ä–æ—Ç–∫–æ–π, –∑–∞–±–∞–≤–Ω–æ–π –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–π —Ñ—Ä–∞–∑–æ–π. "
            "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–º–µ—Å—Ç–Ω—ã–º, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –∏ –≤—ã–∑—ã–≤–∞—Ç—å —É–ª—ã–±–∫—É."
        )
    }.get(lang, "You are a funny meme remix assistant. Prompt:")

    response = await client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": system_prompt + "\nPrompt: " + prompt},
            {"role": "user", "content": "Please reply with a short and funny sentence for remix reaction."}
        ],
        temperature=0.9
    )
    return response.choices[0].message.content.strip()
